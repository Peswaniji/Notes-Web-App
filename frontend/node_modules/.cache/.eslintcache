[{"C:\\Users\\peswa\\Desktop\\git\\MERN\\Notes-App\\frontend\\src\\index.js":"1","C:\\Users\\peswa\\Desktop\\git\\MERN\\Notes-App\\frontend\\src\\App.js":"2","C:\\Users\\peswa\\Desktop\\git\\MERN\\Notes-App\\frontend\\src\\store.js":"3","C:\\Users\\peswa\\Desktop\\git\\MERN\\Notes-App\\frontend\\src\\reducers\\userReducers.js":"4","C:\\Users\\peswa\\Desktop\\git\\MERN\\Notes-App\\frontend\\src\\reducers\\notesReducers.js":"5","C:\\Users\\peswa\\Desktop\\git\\MERN\\Notes-App\\frontend\\src\\components\\Footer\\Footer.js":"6","C:\\Users\\peswa\\Desktop\\git\\MERN\\Notes-App\\frontend\\src\\components\\Header\\Header.js":"7","C:\\Users\\peswa\\Desktop\\git\\MERN\\Notes-App\\frontend\\src\\screens\\LandingPage\\LandingPage.js":"8","C:\\Users\\peswa\\Desktop\\git\\MERN\\Notes-App\\frontend\\src\\screens\\LoginScreen\\LoginScreen.js":"9","C:\\Users\\peswa\\Desktop\\git\\MERN\\Notes-App\\frontend\\src\\screens\\RegisterScreen\\RegisterScreen.js":"10","C:\\Users\\peswa\\Desktop\\git\\MERN\\Notes-App\\frontend\\src\\screens\\CreateNote\\CreateNote.js":"11","C:\\Users\\peswa\\Desktop\\git\\MERN\\Notes-App\\frontend\\src\\screens\\MyNotes\\MyNotes.js":"12","C:\\Users\\peswa\\Desktop\\git\\MERN\\Notes-App\\frontend\\src\\screens\\ProfileScreen\\ProfileScreen.js":"13","C:\\Users\\peswa\\Desktop\\git\\MERN\\Notes-App\\frontend\\src\\screens\\SingleNote\\SingleNote.js":"14","C:\\Users\\peswa\\Desktop\\git\\MERN\\Notes-App\\frontend\\src\\constants\\userConstants.js":"15","C:\\Users\\peswa\\Desktop\\git\\MERN\\Notes-App\\frontend\\src\\constants\\noteConstants.js":"16","C:\\Users\\peswa\\Desktop\\git\\MERN\\Notes-App\\frontend\\src\\actions\\userActions.js":"17","C:\\Users\\peswa\\Desktop\\git\\MERN\\Notes-App\\frontend\\src\\components\\Loading.js":"18","C:\\Users\\peswa\\Desktop\\git\\MERN\\Notes-App\\frontend\\src\\components\\ErrorMessage.js":"19","C:\\Users\\peswa\\Desktop\\git\\MERN\\Notes-App\\frontend\\src\\actions\\notesActions.js":"20","C:\\Users\\peswa\\Desktop\\git\\MERN\\Notes-App\\frontend\\src\\components\\MainScreen.js":"21","C:\\Users\\peswa\\Desktop\\git\\MERN\\Notes-App\\frontend\\src\\helper\\BaseURL.js":"22"},{"size":416,"mtime":1734095820691,"results":"23","hashOfConfig":"24"},{"size":1383,"mtime":1734095820640,"results":"25","hashOfConfig":"24"},{"size":1044,"mtime":1734095820706,"results":"26","hashOfConfig":"24"},{"size":1465,"mtime":1734095820693,"results":"27","hashOfConfig":"24"},{"size":1796,"mtime":1734095820692,"results":"28","hashOfConfig":"24"},{"size":474,"mtime":1734095820679,"results":"29","hashOfConfig":"24"},{"size":2155,"mtime":1734095820680,"results":"30","hashOfConfig":"24"},{"size":1298,"mtime":1734095820695,"results":"31","hashOfConfig":"24"},{"size":2372,"mtime":1734095820697,"results":"32","hashOfConfig":"24"},{"size":3217,"mtime":1734095820703,"results":"33","hashOfConfig":"24"},{"size":3191,"mtime":1734095820694,"results":"34","hashOfConfig":"24"},{"size":4065,"mtime":1734095820701,"results":"35","hashOfConfig":"24"},{"size":3394,"mtime":1734095820702,"results":"36","hashOfConfig":"24"},{"size":4397,"mtime":1734095820705,"results":"37","hashOfConfig":"24"},{"size":568,"mtime":1734095820688,"results":"38","hashOfConfig":"24"},{"size":706,"mtime":1734095820688,"results":"39","hashOfConfig":"24"},{"size":2860,"mtime":1734095820642,"results":"40","hashOfConfig":"24"},{"size":460,"mtime":1734095820681,"results":"41","hashOfConfig":"24"},{"size":291,"mtime":1734095820678,"results":"42","hashOfConfig":"24"},{"size":3751,"mtime":1734095820641,"results":"43","hashOfConfig":"24"},{"size":523,"mtime":1734095820685,"results":"44","hashOfConfig":"24"},{"size":49,"mtime":1734095820690,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"dqg2dk",{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\peswa\\Desktop\\git\\MERN\\Notes-App\\frontend\\src\\index.js",[],[],"C:\\Users\\peswa\\Desktop\\git\\MERN\\Notes-App\\frontend\\src\\App.js",[],[],"C:\\Users\\peswa\\Desktop\\git\\MERN\\Notes-App\\frontend\\src\\store.js",[],[],"C:\\Users\\peswa\\Desktop\\git\\MERN\\Notes-App\\frontend\\src\\reducers\\userReducers.js",[],[],"C:\\Users\\peswa\\Desktop\\git\\MERN\\Notes-App\\frontend\\src\\reducers\\notesReducers.js",[],[],"C:\\Users\\peswa\\Desktop\\git\\MERN\\Notes-App\\frontend\\src\\components\\Footer\\Footer.js",[],[],"C:\\Users\\peswa\\Desktop\\git\\MERN\\Notes-App\\frontend\\src\\components\\Header\\Header.js",[],[],"C:\\Users\\peswa\\Desktop\\git\\MERN\\Notes-App\\frontend\\src\\screens\\LandingPage\\LandingPage.js",[],[],"C:\\Users\\peswa\\Desktop\\git\\MERN\\Notes-App\\frontend\\src\\screens\\LoginScreen\\LoginScreen.js",[],[],"C:\\Users\\peswa\\Desktop\\git\\MERN\\Notes-App\\frontend\\src\\screens\\RegisterScreen\\RegisterScreen.js",[],[],"C:\\Users\\peswa\\Desktop\\git\\MERN\\Notes-App\\frontend\\src\\screens\\CreateNote\\CreateNote.js",["115"],[],"import { useState } from \"react\";\r\nimport { Button, Card, Form } from \"react-bootstrap\";\r\nimport MainScreen from \"../../components/MainScreen\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createNoteAction } from \"../../actions/notesActions\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ErrorMessage from \"../../components/ErrorMessage\";\r\nimport Loading from \"../../components/Loading\";\r\n\r\nconst CreateNote = () => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const noteCrate = useSelector((state) => state.noteCrate);\r\n  const { loading, error, note } = noteCrate;\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const resetHandler = () => {\r\n    setTitle(\"\");\r\n    setContent(\"\");\r\n    setCategory(\"\");\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (!title || !content || !category) return;\r\n    dispatch(createNoteAction(title, content, category));\r\n\r\n    resetHandler();\r\n    navigate(\"/mynotes\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MainScreen title=\"Create a Note\">\r\n        <Card>\r\n          <Form onSubmit={submitHandler}>\r\n            {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n            <Form.Group controlId=\"title\">\r\n              <Form.Label>Title</Form.Label>\r\n              <Form.Control\r\n                type=\"title\"\r\n                value={title}\r\n                placeholder=\"Enter a title\"\r\n                onChange={(e) => setTitle(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"content\">\r\n              <Form.Label>Content</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                value={content}\r\n                placeholder=\"Enter the content\"\r\n                rows={4}\r\n                onChange={(e) => setContent(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            {content && (\r\n              <Card>\r\n                <Card.Header>Note Preview</Card.Header>\r\n                <Card.Body>\r\n                  <ReactMarkdown>{content}</ReactMarkdown>\r\n                </Card.Body>\r\n              </Card>\r\n            )}\r\n\r\n            <Form.Group controlId=\"content\">\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type=\"content\"\r\n                value={category}\r\n                placeholder=\"Enter the category\"\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            {loading && <Loading size={50} />}\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Create Note\r\n            </Button>\r\n            <Button className=\"mx-2\" onClick={resetHandler} variant=\"danger\">\r\n              Reset Fields\r\n            </Button>\r\n          </Form>\r\n          <Card.Footer className=\"text-muted\">\r\n            Creating on - {new Date().toLocaleDateString()}\r\n          </Card.Footer>\r\n        </Card>\r\n      </MainScreen>\r\n    </div>\r\n  );\r\n};\r\nexport default CreateNote;\r\n","C:\\Users\\peswa\\Desktop\\git\\MERN\\Notes-App\\frontend\\src\\screens\\MyNotes\\MyNotes.js",["116"],[],"import { useEffect } from \"react\";\r\nimport { Accordion, Badge, Button, Card } from \"react-bootstrap\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport MainScreen from \"../../components/MainScreen\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteNoteAction, listNotes } from \"../../actions/notesActions\";\r\nimport Loading from \"../../components/Loading\";\r\nimport ErrorMessage from \"../../components/ErrorMessage\";\r\n\r\nconst MyNotes = ({ search }) => {\r\n  const dispatch = useDispatch();\r\n  const noteList = useSelector((state) => state.noteList);\r\n  const { loading, error, notes } = noteList;\r\n\r\n  const navigate = useNavigate();\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const noteCrate = useSelector((state) => state.noteCrate);\r\n  const { success: successCreate } = noteCrate;\r\n\r\n  const noteUpdate = useSelector((state) => state.noteUpdate);\r\n  const { success: successUpdate } = noteUpdate;\r\n\r\n  const noteDelete = useSelector((state) => state.noteDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = noteDelete;\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"Are you sure?\")) {\r\n      dispatch(deleteNoteAction(id));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      navigate(\"/\");\r\n    }\r\n    dispatch(listNotes());\r\n  }, [\r\n    dispatch,\r\n    successCreate,\r\n    navigate,\r\n    userInfo,\r\n    successUpdate,\r\n    successDelete,\r\n  ]);\r\n\r\n  return (\r\n    <div>\r\n      <MainScreen title={`Welcome ${userInfo?.name?.split(\" \")[0]}...`}>\r\n        <Link to=\"/createnote\">\r\n          <Button style={{ marginLeft: 10, marginBottom: 6 }} size=\"lg\">\r\n            Create a Note\r\n          </Button>\r\n        </Link>\r\n        {errorDelete && (\r\n          <ErrorMessage variant=\"danger\">{errorDelete}</ErrorMessage>\r\n        )}\r\n        {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n        {loading && <Loading />}\r\n        {notes\r\n          ?.reverse()\r\n          .filter((filterdNote) =>\r\n            filterdNote.title.toLowerCase().includes(search.toLowerCase())\r\n          )\r\n          .map((note) => (\r\n            <Accordion defaultActiveKey=\"0\">\r\n              <Card style={{ margin: 10 }}>\r\n                <Card.Header style={{ display: \"flex\"}}>\r\n                  <span\r\n                    style={{\r\n                      color: \"black\",\r\n                      textDecoration: \"none\",\r\n                      flex: 1,\r\n                      cursor: \"pointer\",\r\n                      alignSelf: \"center\",\r\n                      fontSize: 18,\r\n                      fontWeight: \"bold\"\r\n                    }}\r\n                  >\r\n                    <Accordion.Header>{note.title}</Accordion.Header>\r\n                  </span>\r\n                  <div>\r\n                    <Link to={`/note/${note._id}`}>\r\n                      <Button>Edit</Button>\r\n                    </Link>\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      className=\"mx-2\"\r\n                      onClick={() => deleteHandler(note._id)}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </div>\r\n                </Card.Header>\r\n                <Accordion.Body>\r\n                  <Card.Body>\r\n                    <h4>\r\n                      <Badge pill bg=\"success\">\r\n                        Category - {note.category}\r\n                      </Badge>\r\n                    </h4>\r\n                    <blockquote className=\"blockquote mb-0\">\r\n                      <p>{note.content}</p>\r\n                      <footer className=\"blockquote-footer\">\r\n                        Created On - {note.createdAt.substring(0, 10)}\r\n                      </footer>\r\n                    </blockquote>\r\n                  </Card.Body>\r\n                </Accordion.Body>\r\n              </Card>\r\n            </Accordion>\r\n          ))}\r\n      </MainScreen>\r\n    </div>\r\n  );\r\n};\r\nexport default MyNotes;\r\n","C:\\Users\\peswa\\Desktop\\git\\MERN\\Notes-App\\frontend\\src\\screens\\ProfileScreen\\ProfileScreen.js",[],[],"C:\\Users\\peswa\\Desktop\\git\\MERN\\Notes-App\\frontend\\src\\screens\\SingleNote\\SingleNote.js",["117"],[],"import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Button, Card, Form } from \"react-bootstrap\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { deleteNoteAction, updateNoteAction } from \"../../actions/notesActions\";\r\nimport ErrorMessage from \"../../components/ErrorMessage\";\r\nimport Loading from \"../../components/Loading\";\r\nimport MainScreen from \"../../components/MainScreen\";\r\nimport { BaseURL } from \"../../helper/BaseURL\";\r\n\r\nconst SingleNote = () => {\r\n  const [title, setTitle] = useState();\r\n  const [content, setContent] = useState();\r\n  const [category, setCategory] = useState();\r\n  const [date, setDate] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const noteUpdate = useSelector((state) => state.noteUpdate);\r\n  const { loading, error } = noteUpdate;\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const noteDelete = useSelector((state) => state.noteDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = noteDelete;\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"Are you sure?\")) {\r\n      dispatch(deleteNoteAction(id));\r\n    }\r\n    navigate(\"/mynotes\");\r\n  };\r\n\r\n  const location = useLocation();\r\n  const id = location.pathname.split(\"/\")[2];\r\n\r\n  useEffect(() => {\r\n    const fetching = async () => {\r\n      const { data } = await axios.get(`${BaseURL}/api/note/${id}`);\r\n\r\n      setTitle(data.message.title);\r\n      setContent(data.message.content);\r\n      setCategory(data.message.category);\r\n      setDate(data.message.updatedAt);\r\n    };\r\n    fetching();\r\n  }, [id, date]);\r\n\r\n  const resetHandler = () => {\r\n    setTitle(\"\");\r\n    setContent(\"\");\r\n    setCategory(\"\");\r\n  };\r\n\r\n  const updateHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(updateNoteAction(id, title, content, category));\r\n    if (!title || !content || !category) return;\r\n\r\n    resetHandler();\r\n    navigate(\"/mynotes\");\r\n  };\r\n\r\n  return (\r\n    <MainScreen title=\"Edit Note\">\r\n      <Card>\r\n        <Card.Header>Edit your note</Card.Header>\r\n        <Card.Body>\r\n          <Form onSubmit={updateHandler}>\r\n            {loadingDelete && <Loading />}\r\n            {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n            {errorDelete && (\r\n              <ErrorMessage variant=\"danger\">{errorDelete}</ErrorMessage>\r\n            )}\r\n            <Form.Group controlId=\"title\">\r\n              <Form.Label>Title</Form.Label>\r\n              <Form.Control\r\n                type=\"title\"\r\n                value={title}\r\n                placeholder=\"Update the title\"\r\n                onChange={(e) => setTitle(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"content\">\r\n              <Form.Label>Content</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                value={content}\r\n                placeholder=\"Update the content\"\r\n                rows={4}\r\n                onChange={(e) => setContent(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            {content && (\r\n              <Card>\r\n                <Card.Header>Note Preview</Card.Header>\r\n                <Card.Body>\r\n                  <ReactMarkdown>{content}</ReactMarkdown>\r\n                </Card.Body>\r\n              </Card>\r\n            )}\r\n\r\n            <Form.Group controlId=\"content\">\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type=\"content\"\r\n                value={category}\r\n                placeholder=\"Update the category\"\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            {loading && <Loading size={50} />}\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Update Note\r\n            </Button>\r\n            <Button\r\n              className=\"mx-2\"\r\n              onClick={() => deleteHandler(id)}\r\n              variant=\"danger\"\r\n            >\r\n              Delete Note\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n\r\n        <Card.Footer className=\"text-muted\">\r\n          Updated on - {date.substring(0, 10)}\r\n        </Card.Footer>\r\n      </Card>\r\n    </MainScreen>\r\n  );\r\n};\r\nexport default SingleNote;\r\n","C:\\Users\\peswa\\Desktop\\git\\MERN\\Notes-App\\frontend\\src\\constants\\userConstants.js",[],[],"C:\\Users\\peswa\\Desktop\\git\\MERN\\Notes-App\\frontend\\src\\constants\\noteConstants.js",[],[],"C:\\Users\\peswa\\Desktop\\git\\MERN\\Notes-App\\frontend\\src\\actions\\userActions.js",[],[],"C:\\Users\\peswa\\Desktop\\git\\MERN\\Notes-App\\frontend\\src\\components\\Loading.js",[],[],"C:\\Users\\peswa\\Desktop\\git\\MERN\\Notes-App\\frontend\\src\\components\\ErrorMessage.js",[],[],"C:\\Users\\peswa\\Desktop\\git\\MERN\\Notes-App\\frontend\\src\\actions\\notesActions.js",[],[],"C:\\Users\\peswa\\Desktop\\git\\MERN\\Notes-App\\frontend\\src\\components\\MainScreen.js",[],[],"C:\\Users\\peswa\\Desktop\\git\\MERN\\Notes-App\\frontend\\src\\helper\\BaseURL.js",[],[],{"ruleId":"118","severity":1,"message":"119","line":18,"column":27,"nodeType":"120","messageId":"121","endLine":18,"endColumn":31},{"ruleId":"118","severity":1,"message":"122","line":27,"column":14,"nodeType":"120","messageId":"121","endLine":27,"endColumn":27},{"ruleId":"118","severity":1,"message":"123","line":30,"column":14,"nodeType":"120","messageId":"121","endLine":30,"endColumn":27},"no-unused-vars","'note' is assigned a value but never used.","Identifier","unusedVar","'loadingDelete' is assigned a value but never used.","'successDelete' is assigned a value but never used."]